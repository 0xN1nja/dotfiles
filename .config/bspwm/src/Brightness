#!/usr/bin/env bash
#  ██████╗ ██████╗ ██╗ ██████╗ ██╗  ██╗████████╗███╗   ██╗███████╗███████╗███████╗
#  ██╔══██╗██╔══██╗██║██╔════╝ ██║  ██║╚══██╔══╝████╗  ██║██╔════╝██╔════╝██╔════╝
#  ██████╔╝██████╔╝██║██║  ███╗███████║   ██║   ██╔██╗ ██║█████╗  ███████╗███████╗
#  ██╔══██╗██╔══██╗██║██║   ██║██╔══██║   ██║   ██║╚██╗██║██╔══╝  ╚════██║╚════██║
#  ██████╔╝██║  ██║██║╚██████╔╝██║  ██║   ██║   ██║ ╚████║███████╗███████║███████║
#  ╚═════╝ ╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═══╝╚══════╝╚══════╝╚══════╝
#	Author	-	gh0stzk
#	Repo	-	https://github.com/gh0stzk/dotfiles
#	Date	-	03.02.2025 14:22:32
#
# Brightness - Hardware brightness control
# Features:
#   ✔ Brightness adjustments in 5% increments
#   ✔ Configurable minimum of 2% brightness
#   ✔ OSD notifications with graphical progress bar
#
# Dependencies:
#   → brightnessctl
#   → dunst
#
# Copyright (C) 2021-2025 gh0stzk <z0mbi3.zk@protonmail.com>
# Licensed under GPL-3.0 license


readonly DIR="$HOME/.config/bspwm/src/assets"
readonly BRIGHTNESS_STEPS=5
readonly MIN_BRIGHTNESS=2
readonly NOTIFICATION_ID=12345

get_brightness() {
    brightnessctl i | awk -F '[()%]' '/Current brightness:/ {print $2}'
}

send_notification() {
    local brightness="$1"
    local icon="$DIR/brightness.svg"
    local bar=""
    local -i bar_length=$((brightness / BRIGHTNESS_STEPS))

    for ((i = 0; i < bar_length; i++)); do
        bar+="─"
    done

    dunstify "Brightness $brightness%" -i $icon -r 5555 -h int:value:$(($brightness))
}

adjust_brightness() {
    local -i current
    current="$(get_brightness)"

    case $1 in
        up)
            if ((current == MIN_BRIGHTNESS)); then
                brightnessctl set "${BRIGHTNESS_STEPS}%" -q
            else
                brightnessctl set "${BRIGHTNESS_STEPS}%+" -q
            fi
            ;;
        down)
            if ((current <= MIN_BRIGHTNESS + BRIGHTNESS_STEPS)); then
                brightnessctl set "${MIN_BRIGHTNESS}%" -q
            else
                brightnessctl set "${BRIGHTNESS_STEPS}%-" -q
            fi
            ;;
    esac

    send_notification "$(get_brightness)"
}

case $1 in
    up|down) adjust_brightness "$1" ;;
esac
